---
attack_technique: T1222
display_name: File Permissions Modification

atomic_tests:
- name: Take ownership using takeown utility
  description: |
    Modifies the filesystem permissions of the specified file or folder to take ownership of the object.

  supported_platforms:
    - windows

  executor:
    name: command_prompt
    command: |
      echo Test file > T1222.txt
      takeown.exe /f T1222.txt
      dir /q T1222.txt
      del T1222.txt

- name: Take ownership recursively using takeown utility
  description: |
    Modifies the filesystem permissions of the specified folder to take ownership of it and its contents.

  supported_platforms:
    - windows

  executor:
    name: command_prompt
    command: |
      mkdir T1212
      takeown.exe /f #{folder_to_own} /r

- name: cacls - Grant permission to specified user or group
  description: |
    Modifies the filesystem permissions of the specified file or folder to allow the specified user or group Full Control.

  supported_platforms:
    - windows

  input_arguments:
    user_or_group:
      description: User or group to allow full control
      type: string
      default: Everyone

  executor:
    name: command_prompt
    command: |
      echo Test file > T1222.txt
      Icacls.exe T1222.txt /grant #{user_or_group}:(F)
      dir /q T1222.txt
      del T1222.txt

- name: cacls - Grant permission to specified user or group recursively
  description: |
    Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control.

  supported_platforms:
    - windows

  input_arguments:
    user_or_group:
      description: User or group to allow full control
      type: string
      default: Everyone

  executor:
    name: command_prompt
    command: |
      echo Test file > T1222.txt
      cacls.exe T1222.txt /grant #{user_or_group}:F /t
      dir /q T1222.txt
      del T1222.txt

- name: icacls - Grant permission to specified user or group
  description: |
    Modifies the filesystem permissions of the specified file or folder to allow the specified user or group Full Control.

  supported_platforms:
    - windows

  input_arguments:
    user_or_group:
      description: User or group to allow full control
      type: string
      default: Everyone

  executor:
    name: command_prompt
    command: |
      echo Test file > T1222.txt
      icacls.exe T1222.txt /grant #{user_or_group}:F
      dir /q T1222.txt
      del T1222.txt

- name: icacls - Grant permission to specified user or group recursively
  description: |
    Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control.

  supported_platforms:
    - windows

  input_arguments:
    user_or_group:
      description: User or group to allow full control
      type: string
      default: Everyone

  executor:
    name: command_prompt
    command: |
      echo Test file > T1222.txt
      icacls.exe T1222.txt /grant #{user_or_group}:F /t
      dir /q T1222.txt
      del T1222.txt

- name: attrib - Remove read-only attribute
  description: |
    Removes the read-only attribute from a file or folder using the attrib.exe command.

  supported_platforms:
    - windows

  executor:
    name: command_prompt
    command: |
      echo Test file > T1222.txt
      attrib.exe -r T1222.txt
      dir /q T1222.txt
      del T1222.txt

- name: chmod - Change file or folder mode (numeric mode)
  description: |
    Changes a file or folder's permissions using chmod and a specified numeric mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    numeric_mode:
      description: Specified numeric mode value
      type: string
      default: 755

  executor:
    name: bash
    command: |
      echo Test files >> /tmp/T1222.txt
      chmod #{numeric_mode} /tmp/T1222.txt
      ls -l /tmp/T1222.txt
      rm /tmp/T1222.txt

- name: chmod - Change file or folder mode (symbolic mode)
  description: |
    Changes a file or folder's permissions using chmod and a specified symbolic mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    symbolic_mode:
      description: Specified symbolic mode value
      type: string
      default: a+w

  executor:
    name: bash
    command: |
      echo Test file > /tmp/T1222.txt
      chmod #{symbolic_mode} /tmp/T1222.txt
      ls -l /tmp/T1222.txt
      rm /tmp/T1222.txt

- name: chmod - Change file or folder mode (numeric mode) recursively
  description: |
    Changes a file or folder's permissions recursively using chmod and a specified numeric mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    numeric_mode:
      description: Specified numeric mode value
      type: string
      default: 755

  executor:
    name: bash
    command: |
      echo Test file > /tmp/T1222.txt
      chmod #{numeric_mode} /tmp/T1222.txt -R

- name: chmod - Change file or folder mode (symbolic mode) recursively
  description: |
    Changes a file or folder's permissions recursively using chmod and a specified symbolic mode.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    symbolic_mode:
      description: Specified symbolic mode value
      type: string
      default: a+w

  executor:
    name: bash
    command: |
      echo Test file > /tmp/T1222.txt
      chmod #{symbolic_mode} /tmp/T1222.txt -R
      ls -l /tmp/T1222.txt
      rm /tmp/T1222.txt

- name: chown - Change file or folder ownership and group
  description: |
    Changes a file or folder's ownership and group information using chown.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    owner:
      description: Username of desired owner
      type: string
      default: root
    group:
      description: Group name of desired group
      type: string
      default: root

  executor:
    name: bash
    command: |
      echo Test file > /tmp/T1222.txt
      chown #{owner}:#{group} /tmp/T1222.txt
      ls -l /tmp/T1222.txt
      rm /tmp/T1222.txt

- name: chown - Change file or folder ownership and group recursively
  description: |
    Changes a file or folder's ownership and group information recursively using chown.
  supported_platforms:
    - macos
    - linux

  input_arguments:
    owner:
      description: Username of desired owner
      type: string
      default: root
    group:
      description: Group name of desired group
      type: string
      default: root

  executor:
    name: bash
    command: |
      echo Test file > /tmp/T1222.txt
      chown #{owner}:#{group} /tmp/T1222.txt -R
      ls -l /tmp/T1222.txt
      rm /tmp/T1222.txt

- name: chown - Change file or folder mode ownership only
  description: |
    Changes a file or folder's ownership only using chown.

  supported_platforms:
    - macos
    - linux

  input_arguments:
    owner:
      description: Username of desired owner
      type: string
      default: root

  executor:
    name: bash
    command: |
      echo Test file > /tmp/T1222.txt
      chown #{owner} /tmp/T1222.txt
      ls -l /tmp/T1222.txt
      rm /tmp/T1222.txt

- name: chown - Change file or folder ownership recursively
  description: |
    Changes a file or folder's ownership only recursively using chown.
  supported_platforms:
    - macos
    - linux

  input_arguments:
    owner:
      description: Username of desired owner
      type: string
      default: root

  executor:
    name: bash
    command: |
      echo Test file > /tmp/T1222.txt
      chown #{owner} /tmp/T1222.txt -R
      ls -l /tmp/T1222.txt
      rm /tmp/T1222.txt

- name: chattr - Remove immutable file attribute
  description: |
    Remove's a file's `immutable` attribute using `chattr`.
    This technique was used by the threat actor Rocke during the compromise of Linux web servers.
  supported_platforms:
    - macos
    - linux

  input_arguments:
    file_to_modify:
      description: Path of the file
      type: path
      default: /var/spool/cron/root

  executor:
    name: sh
    command: |
      chattr -i #{file_to_modify}
